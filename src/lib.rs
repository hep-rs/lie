//! `lie-rs` provides functionalities to manipulate Lie groups and their
//! representations, including the ability to:
//!
//! - Quickly verify whether a product of irreducible representations can form a
//!   singlet;
//! - Decompose the product of irreducible representation into sum of
//!   irreducible representations;
//! - List how indices of a product of irreducible representations can be
//!   contracted to form a singlet; and
//! - Other tools to manipulate root systems and Cartan matrices.
//!
//! **This library is still undergoing development.**
//!
//! [![Crates.io](https://img.shields.io/crates/v/hep-lie.svg)](https://crates.io/crates/hep-lie)
//! [![Travis](https://img.shields.io/travis/hep-rs/lie/master.svg)](https://travis-ci.org/hep-rs/lie)
//! [![Codecov](https://img.shields.io/codecov/c/github/hep-rs/lie/master.svg)](https://codecov.io/gh/hep-rs/lie)
//!
//! Licensed under [GPLv3](https://www.gnu.org/licenses/gpl-3.0.html).
//!
//! The library is primarily developed within the context of particle physics;
//! however, this should in no way be a restriction for contributions to this
//! library and extensions beyond the initial scope of this library are very
//! welcome.
//!
//! It is hoped that this library will be accessible to people who are not fully
//! familiar with all aspects of the study of Lie groups and their
//! representations.  The documentation will attempt to provide explanations of
//! various definitions.
//!
//! # Lie Groups and Algebra
//!
//! A [*Lie group*](https://en.wikipedia.org/wiki/Lie_group), \\(G\\), is a
//! group that is also a differential manifold which ultimately means that all
//! elements of the group \\(G\\) can be describe by a set real parameters.  For
//! example, the group of real \\(2 \times 2\\) unitary matrices with
//! determinant 1, \\(\mathrm{SU}(2)\\), can be described in terms of three
//! parameters.
//!
//! \\begin{equation}
//!   \mathrm{SU}(2) = \left\\{
//!     \begin{pmatrix} \alpha & - \beta\^{*} \\\\ \beta & \alpha\^{*} \end{pmatrix}
//!     \middle\|
//!     \alpha, \beta \in \mathbb{C}, |\alpha|\^2 + |\beta|\^{2} = 1
//!   \right\\}
//! \\end{equation}
//!
//! This library will look at handling only compact and simply connected groups.
//!
//! Very closely related to Lie groups are [*Lie
//! algebras*](https://en.wikipedia.org/wiki/Lie_algebra) which are denoted
//! using lowercase Gothic characters \\(\mathfrak{g}\\).  Although
//! mathematically very different objects, Lie groups and Lie algebras are very
//! closely related and the distinction will occasionally be blurred (especially
//! in the physics literature).
//!
//! In particular, given that a Lie group \\(G\\) forms smooth manifold, one can
//! consider the tangent space at the identity.  This tangent space forms
//! exactly the group's Lie algebra and as a result, it is possible to generate
//! all elements of a Lie group by exponentiating elements of the Lie algebra.
//! As a concrete example, the Lie algebra of \\(\mathrm{SU}(2)\\),
//! \\(\mathfrak{su}(2)\\), is generated by the three elements:
//!
//! \\begin{align}
//!   \begin{pmatrix} 0 & i \\\\ i & 0 \\end{pmatrix} &&
//!   \begin{pmatrix} 0 & -1 \\\\ 1 & 0 \\end{pmatrix} &&
//!   \begin{pmatrix} i & 0 \\\\ 0 & 0i \\end{pmatrix} &&
//! \\end{align}
//!
//! These correspond, through a factor of \\(-i\\), to the well-known Pauli
//! matrices.
//!
//! All of the compact Lie groups have been categorized and fall into one of 4
//! infinity series and 5 exception groups, described [here](series/index.html).
//!
//! ## Representation
//!
//! A
//! [*representation*](https://en.wikipedia.org/wiki/Representation_of_a_Lie_group)
//! of a Lie group \\(G\\) is a smooth group homomorphism \\(\Pi : G \to
//! \mathop{\mathrm{Aut}}(V)\\), where \\(\mathop{\mathrm{Aut}}(V)\\) is the
//! group of automorphisms of some vector space \\(V\\) (where an automorphism
//! is a homomorphism mapping \\(V\\) to itself).  Alternatively, it is possible
//! to think of representations as smooth group homomorphisms \\(\Pi : G \to
//! \mathrm{GL}(n)\\) where \\(\mathrm{GL}(n)\\) is the set of invertible \\(n
//! \times n\\) matrices (such a representation is a *matrix representation*).
//!
//! For example, the definition for \\(\mathrm{SU}(2)\\) above defines the group
//! in terms of \\(2 \times 2\\) matrices, and these matrices in turn can be
//! thought of as operators taking \\(V = \mathbb{R}\^2\\) to itself; hence we
//! already have one representation of \\(\mathrm{SU}(2)\\).  There is also the
//! trivial representation which maps all elements to the identity matrix which
//! is important as the representation leaves everything under \\(V\\)
//! unchanged, but mathematically is not very interesting.
//!
//! We will be particularly interested in:
//!
//! - classifying the various irreducible representations of a group (for
//!   example, is there a group homomorphism from \\(\mathrm{SU}(2)\\) to
//!   \\(\mathrm{GL}(3)\\)?); and,
//!
//! - determining how a product of representations can be decomposed into a sum
//!   of irreducible representations, where a sum of representations amounts to
//!   arranging each matrix representation in block-diagonal.
//!
//! # Root Systems
//!
//! A [root system](https://en.wikipedia.org/wiki/Root_system) is a
//! configuration of vectors in Euclidean space which satisfy certain
//! geometrical properties.  Although it might not appear that they have much in
//! common with the study of Lie groups and their representations, they are in
//! fact extremely useful.  The definition for a root system is found
//! [here](root_system/trait.RootSystem.html).
//!
//!
//! ## Connection to Group Representations

#![cfg_attr(feature = "cargo-clippy", allow(doc_markdown))]
#![cfg_attr(feature = "nightly", feature(test))]

#[macro_use]
extern crate ndarray;
extern crate rayon;

#[cfg(feature = "nightly")]
extern crate test;

mod error;
mod root;
pub mod root_system;
pub mod series;

pub use root::Root;
pub use error::Error;
pub use root_system::{CartanMatrix, RootSystem};
